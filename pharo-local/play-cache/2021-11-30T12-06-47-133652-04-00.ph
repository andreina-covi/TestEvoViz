| typeInfo block regex tCFactory |block := [ PMVectorTest buildSuite run ]. "Block of code"regex := 'Math-Core'. "Package name of the target class"typeInfo := STypeInfo asTypeInfo: (        SSTypeCollector profile: block onPackagesMatching: regex)."then, we use the type information to generate tests. Configure the hyperparameter values which are marked as 'hyperparameter'"tCFactory := STestCaseFactoryPharo new    targetClassName: #PMVector;	 typeInfo: typeInfo;    targetPackageRegex: regex;    outputPackageName: 'Generated'; "output package name of the test classes"    numberOfGenerations: 5;  "hyperparameter, numberOfGenerations > 1 and integer"    numberOfStatements: 10;  "hyperparameter, numberOfStatements > 1 and integer"    populationSize: 10;		  "hyperparameter, populationSize > 1 and integer"	 mutationRate: 1/3;		  "hyperparameter, 0 < mutationRate <= 1"    seed: 1000;				  "hyperparameter, seed > 0 and integer"    seedBlock: block;	 selectionStrategy: SGATournamentSelection; "hyperparameter, possible values: SGARandomSelection, SGARankSelection, SGARouletteSelection, SGATournamentSelection, SGATruncatedSelection"	 generateViews;    createTestCases;    yourself.tCFactory inspect